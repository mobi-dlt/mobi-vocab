{
	"info": {
		"_postman_id": "0d3c2c62-4a07-4d64-8bd8-a2a991acd957",
		"name": "Demo Verifiable Credentials API",
		"description": "Reference implementation of the vc-http-api spec",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "did:core Sanity Checks",
			"item": [
				{
					"name": "DID Configuration Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(",
									"    \"primaryAssertionMethod\", ",
									"    pm.collectionVariables.get(\"primaryDid\")+\"#\"+pm.collectionVariables.get(\"primaryDid\").split(':key:')[1]",
									");",
									"pm.test(",
									"    \"sanity\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"did\" + \"::\" + \"config\" + \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\"), ",
									"    function () {",
									"    pm.response.to.have.status(200);",
									"    // if (pm.response.status === 200){",
									"    //     if (JSON.parse(responseBody).linked_dids[0].issuer) {",
									"    //         did = JSON.parse(responseBody).linked_dids[0].issuer",
									"    //         pm.collectionVariables.set(\"primaryDid\", did);",
									"    //     }",
									"    // }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{primaryServer}}/.well-known/did-configuration.json",
							"host": [
								"{{primaryServer}}"
							],
							"path": [
								".well-known",
								"did-configuration.json"
							]
						}
					},
					"response": [
						{
							"name": "DID Configuration Endpoint",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{primaryServer}}/.well-known/did-configuration.json",
									"host": [
										"{{primaryServer}}"
									],
									"path": [
										".well-known",
										"did-configuration.json"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "1714"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Mar 2021 17:14:40 GMT"
								},
								{
									"key": "Server",
									"value": "Caddy"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"@context\": \"https://identity.foundation/.well-known/contexts/did-configuration-v0.2.jsonld\",\n    \"linked_dids\": [\n        {\n            \"@context\": [\n                \"https://www.w3.org/2018/credentials/v1\",\n                \"https://identity.foundation/.well-known/contexts/did-configuration-v0.2.jsonld\"\n            ],\n            \"issuer\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n            \"issuanceDate\": \"2021-03-09T21:58:09.995Z\",\n            \"expirationDate\": \"2022-03-09T21:58:09.996Z\",\n            \"type\": [\n                \"VerifiableCredential\",\n                \"DomainLinkageCredential\"\n            ],\n            \"credentialSubject\": {\n                \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n                \"origin\": \"https://vc.mesur.io\"\n            },\n            \"proof\": {\n                \"type\": \"Ed25519Signature2018\",\n                \"created\": \"2021-03-09T21:58:10.060Z\",\n                \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQk-zlMce07uSb1MQHBXDk-IE4QnA_VGV56Md17biFBZdGBrrORIZbc0vRw8BmZ03N4cDU6_hfkgjIwTC-HRCw\",\n                \"proofPurpose\": \"assertionMethod\",\n                \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n            }\n        },\n        {\n            \"@context\": [\n                \"https://www.w3.org/2018/credentials/v1\",\n                \"https://identity.foundation/.well-known/contexts/did-configuration-v0.2.jsonld\"\n            ],\n            \"issuer\": \"did:web:vc.mesur.io\",\n            \"issuanceDate\": \"2021-03-09T21:58:10.000Z\",\n            \"expirationDate\": \"2022-03-09T21:58:10.000Z\",\n            \"type\": [\n                \"VerifiableCredential\",\n                \"DomainLinkageCredential\"\n            ],\n            \"credentialSubject\": {\n                \"id\": \"did:web:vc.mesur.io\",\n                \"origin\": \"https://vc.mesur.io\"\n            },\n            \"proof\": {\n                \"type\": \"Ed25519Signature2018\",\n                \"created\": \"2021-03-09T21:58:10.060Z\",\n                \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HGBnLTv0py2eX7dy8q7U0QavQzf528Aow-DQyPQv5-5sxvsOYCzHyYsO41Eqlilcc8CZzLgy_SClinYvpVn6Aw\",\n                \"proofPurpose\": \"assertionMethod\",\n                \"verificationMethod\": \"did:web:vc.mesur.io#z6MkgZNUfVWUR8DAC4o6YiZ7xoqHcmzHeTYYATNrczvxUXDm\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Secondary DID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(",
									"    \"secondaryAssertionMethod\", ",
									"    pm.collectionVariables.get(\"secondaryDid\")+\"#\"+pm.collectionVariables.get(\"secondaryDid\").split(':key:')[1]",
									");",
									"pm.test(",
									"    \"sanity\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"did\" + \"::\" + \"config\" + \"::\" + ",
									"    pm.collectionVariables.get(\"secondaryName\")+ \"::\" + ",
									"    \"bypass\", ",
									"    function () {",
									"    //pm.response.to.have.status(200);",
									"    // if (pm.response.status === 200){",
									"    //     if (JSON.parse(responseBody).linked_dids[0].issuer) {",
									"    //         did = JSON.parse(responseBody).linked_dids[0].issuer",
									"    //         pm.collectionVariables.set(\"secondaryDid\", did);",
									"    //     }",
									"    // }",
									"    //passing this test through",
									"    pm.expect(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{secondaryServer}}/.well-known/did-configuration.json",
							"host": [
								"{{secondaryServer}}"
							],
							"path": [
								".well-known",
								"did-configuration.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tertiary DID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(",
									"    \"tertiaryAssertionMethod\", ",
									"    pm.collectionVariables.get(\"tertiaryDid\")+\"#\"+pm.collectionVariables.get(\"tertiaryDid\").split(':key:')[1]",
									");",
									"pm.test(",
									"    \"sanity\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"did\" + \"::\" + \"config\" + \"::\" + ",
									"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"tertiaryName\"), ",
									"    function () {",
									"    pm.response.to.have.status(200);",
									"    // if (pm.response.status === 200){",
									"    //     if (JSON.parse(responseBody).linked_dids[0].issuer) {",
									"    //         did = JSON.parse(responseBody).linked_dids[0].issuer",
									"    //         pm.collectionVariables.set(\"tertiaryDid\", did);",
									"    //     }",
									"    // }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tertiaryServer}}/.well-known/did-configuration.json",
							"host": [
								"{{tertiaryServer}}"
							],
							"path": [
								".well-known",
								"did-configuration.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Final DID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(",
									"    \"finalAssertionMethod\", ",
									"    pm.collectionVariables.get(\"finalDid\")+\"#\"+pm.collectionVariables.get(\"finalDid\").split(':key:')[1]",
									");",
									"pm.test(",
									"    \"sanity\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"did\" + \"::\" + \"config\" + \"::\" + ",
									"    pm.collectionVariables.get(\"finalName\")+ \"::\" + ",
									"    \"bypass\", ",
									"    function () {",
									"    //pm.response.to.have.status(200);",
									"    // if (pm.response.status === 200){",
									"    //     if (JSON.parse(responseBody).linked_dids[0].issuer) {",
									"    //         did = JSON.parse(responseBody).linked_dids[0].issuer",
									"    //         pm.collectionVariables.set(\"finalDid\", did);",
									"    //     }",
									"    // }",
									"    //passing this for now",
									"    pm.expect(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{finalServer}}/.well-known/did-configuration.json",
							"host": [
								"{{finalServer}}"
							],
							"path": [
								".well-known",
								"did-configuration.json"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(",
							"    \"sanity\" + \"::\" + ",
							"    pm.variables.get(\"credentialType\") + \"::\" + ",
							"    \"response\" + \"::\" + \"timing\" + \"::\" + ",
							"    pm.request.url+ \"::\" + ",
							"    pm.response.responseTime, ",
							"    function(){",
							"        pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						]
					}
				}
			]
		},
		{
			"name": "Base Cross Server Validation",
			"item": [
				{
					"name": "Issuance",
					"item": [
						{
							"name": "Issue by Primary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body)",
											"",
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
											"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"primaryName\"), ",
											"    function () {",
											"        postman.setNextRequest(null);",
											"        pm.collectionVariables.set(\"responseIssueCredPrimary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"        postman.setNextRequest();",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var cred = pm.iterationData.get('credential');",
											"var did = pm.collectionVariables.get(\"primaryDid\");",
											"console.log('Setting primary issuer did to:', did);",
											"cred.issuer = did;",
											"console.log('Retrieved issuer did:', cred.issuer);",
											"",
											"pm.variables.set(",
											"    'credentialprimary',",
											"    JSON.stringify(cred)",
											");",
											"pm.variables.set(",
											"    'credentialType',",
											"    pm.iterationData.get('name')",
											");",
											"console.log('Set initial request to:', pm.variables.get('credentialprimary'));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {{credentialprimary}}\n}"
								},
								"url": {
									"raw": "{{primaryServer}}{{serverPrefix}}/credentials/issue",
									"host": [
										"{{primaryServer}}{{serverPrefix}}"
									],
									"path": [
										"credentials",
										"issue"
									]
								}
							},
							"response": []
						},
						{
							"name": "Issue by Secondary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
											"    pm.collectionVariables.get(\"secondaryName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"secondaryName\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseIssueCredSecondary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var cred = pm.iterationData.get('credential');",
											"cred.issuer = pm.collectionVariables.get(\"secondaryDid\");",
											"",
											"pm.variables.set(",
											"    'credentialsecondary',",
											"    JSON.stringify(cred)",
											");",
											"pm.variables.set(",
											"    'credentialType',",
											"    pm.iterationData.get('name')",
											");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {{credentialsecondary}}\n}"
								},
								"url": {
									"raw": "{{secondaryServer}}{{secondaryPrefix}}/credentials/issue",
									"host": [
										"{{secondaryServer}}{{secondaryPrefix}}"
									],
									"path": [
										"credentials",
										"issue"
									]
								}
							},
							"response": []
						},
						{
							"name": "Issue by Tertiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
											"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"tertiaryName\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseIssueCredTertiary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var cred = pm.iterationData.get('credential');",
											"cred.issuer = pm.collectionVariables.get(\"tertiaryDid\");",
											"",
											"pm.variables.set(",
											"    'credentialtertiary',",
											"    JSON.stringify(cred)",
											");",
											"pm.variables.set(",
											"    'credentialType',",
											"    pm.iterationData.get('name')",
											");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {{credentialtertiary}}\n}"
								},
								"url": {
									"raw": "{{tertiaryServer}}{{tertiaryPrefix}}/credentials/issue",
									"host": [
										"{{tertiaryServer}}{{tertiaryPrefix}}"
									],
									"path": [
										"credentials",
										"issue"
									]
								}
							},
							"response": []
						},
						{
							"name": "Issue by Final",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
											"    pm.collectionVariables.get(\"finalName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"finalName\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseIssueCredFinal\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var cred = pm.iterationData.get('credential');",
											"cred.issuer = pm.collectionVariables.get(\"finalDid\");",
											"",
											"pm.variables.set(",
											"    'credentialfinal',",
											"    JSON.stringify(cred)",
											");",
											"pm.variables.set(",
											"    'credentialType',",
											"    pm.iterationData.get('name')",
											");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {{credentialfinal}} \n}"
								},
								"url": {
									"raw": "{{finalServer}}{{finalPrefix}}/credentials/issue",
									"host": [
										"{{finalServer}}{{finalPrefix}}"
									],
									"path": [
										"credentials",
										"issue"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Signing",
					"item": [
						{
							"name": "Sign Presentation Primary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"sign\" + \"::\" + \"presentation\" + \"::\" + ",
											"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"primaryName\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseSignPresPrimary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {{responseIssueCredPrimary}}\n        ]\n    },\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:28:08Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{primaryServer}}{{serverPrefix}}/presentations/prove",
									"host": [
										"{{primaryServer}}{{serverPrefix}}"
									],
									"path": [
										"presentations",
										"prove"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Presentation Tertiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"base\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"sign\" + \"::\" + \"presentation\" + \"::\" + ",
											"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"tertiaryName\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseSignPresTertiary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {{responseIssueCredTertiary}}\n        ]\n    },\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:28:08Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{tertiaryServer}}{{tertiaryPrefix}}/presentations/prove",
									"host": [
										"{{tertiaryServer}}{{tertiaryPrefix}}"
									],
									"path": [
										"presentations",
										"prove"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verification",
					"item": [
						{
							"name": "Credentials",
							"item": [
								{
									"name": "Verify Credential Primary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
													"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"primaryName\"), ",
													"    function () {",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiableCredential\": {{responseIssueCredPrimary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2021-03-11T17:40:41.662Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n        \"checks\": [\n            \"credentialStatus\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{primaryServer}}{{serverPrefix}}/credentials/verify",
											"host": [
												"{{primaryServer}}{{serverPrefix}}"
											],
											"path": [
												"credentials",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Credential Secondary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
													"    pm.collectionVariables.get(\"secondaryName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"secondaryName\"),  ",
													"    function () {",
													"    //pm.response.to.have.status(200);",
													"    ",
													"    //passing for now since prove is not supported on secondary",
													"    pm.expect(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiableCredential\": {{responseIssueCredSecondary}},\n    \"options\": {\n        \"checks\": [\n            \"proof\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{secondaryServer}}{{secondaryPrefix}}/credentials/verify",
											"host": [
												"{{secondaryServer}}{{secondaryPrefix}}"
											],
											"path": [
												"credentials",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Credential Tertiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"   \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
													"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"tertiaryName\"), ",
													"    function () {",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiableCredential\": {{responseIssueCredPrimary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2021-03-11T17:40:41.662Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n        \"checks\": [\n            \"credentialStatus\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{primaryServer}}{{serverPrefix}}/credentials/verify",
											"host": [
												"{{primaryServer}}{{serverPrefix}}"
											],
											"path": [
												"credentials",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Credential Final",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
													"    pm.collectionVariables.get(\"finalName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"finalName\"), ",
													"    function () {",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiableCredential\": {{responseIssueCredPrimary}},\n    \"options\": {\n        \"checks\": [\n            \"proof\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{primaryServer}}{{serverPrefix}}/credentials/verify",
											"host": [
												"{{primaryServer}}{{serverPrefix}}"
											],
											"path": [
												"credentials",
												"verify"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Presentations",
							"item": [
								{
									"name": "Verify Presentation Primary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"presentation\" + \"::\" + ",
													"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"primaryName\"), ",
													"    function () {",
													"        //pm.collectionVariables.set('credentialFromPres', JSON.stringify(JSON.parse(pm.requestBody).verifiablePresentation.verifiableCredential[0]));",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiablePresentation\": {{responseSignPresPrimary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:48:36Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}"
										},
										"url": {
											"raw": "{{primaryServer}}{{serverPrefix}}/presentations/verify",
											"host": [
												"{{primaryServer}}{{serverPrefix}}"
											],
											"path": [
												"presentations",
												"verify"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Presentation Tertiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"base\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"presentation\" + \"::\" + ",
													"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"tertiaryName\"), ",
													"    function () {",
													"        //pm.collectionVariables.set('credentialFromPres', JSON.stringify(JSON.parse(pm.requestBody).verifiablePresentation.verifiableCredential[0]));",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiablePresentation\": {{responseSignPresTertiary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:48:36Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}"
										},
										"url": {
											"raw": "{{primaryServer}}{{serverPrefix}}/presentations/verify",
											"host": [
												"{{primaryServer}}{{serverPrefix}}"
											],
											"path": [
												"presentations",
												"verify"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(",
							"    \"base\" + \"::\" + ",
							"    pm.variables.get(\"credentialType\") + \"::\" + ",
							"    \"response\" + \"::\" + \"timing\" + \"::\" + ",
							"    pm.request.url+ \"::\" + ",
							"    pm.response.responseTime,",
							"    function(){",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});",
							""
						]
					}
				}
			]
		},
		{
			"name": "Common Workflow",
			"item": [
				{
					"name": "Issue new credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(",
									"    \"workflow\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\"), ",
									"    function () {",
									"        pm.response.to.have.status(201);",
									"        pm.collectionVariables.set(\"responseIssueCred\", responseBody);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": {{credentialprimary}} \n}"
						},
						"url": {
							"raw": "{{primaryServer}}{{serverPrefix}}/credentials/issue",
							"host": [
								"{{primaryServer}}{{serverPrefix}}"
							],
							"path": [
								"credentials",
								"issue"
							]
						}
					},
					"response": [
						{
							"name": "Issue credential",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://dlt.mobi/mobility-schema\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"{{credentialType}}\"\n        ],\n        \"issuer\": {\n            \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n        },\n        \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n        \"credentialSubject\": {{credentialSubject}}\n    },\n    \"options\": {\n        \"proofPurpose\": \"assertionMethod\",\n        \"verificationMethod\": \"did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd#z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd\"\n    }\n}"
								},
								"url": {
									"raw": "{{primaryServer}}/credentials/issue",
									"host": [
										"{{primaryServer}}"
									],
									"path": [
										"credentials",
										"issue"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "content-length",
									"value": "1802"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Mar 2021 17:40:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://dlt.mobi/mobility-schema\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n        \"VerifiableCredential\",\n        \"AgProduct\"\n    ],\n    \"issuer\": {\n        \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n    },\n    \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n    \"credentialSubject\": {\n        \"type\": \"AgProduct\",\n        \"upc\": \"033383401508\",\n        \"plu\": \"94225\",\n        \"gtin\": \"033383401508\",\n        \"product\": {\n            \"type\": \"Product\",\n            \"manufacturer\": {\n                \"type\": \"Person\",\n                \"firstName\": \"Itzel\",\n                \"lastName\": \"Leannon\",\n                \"email\": \"Camila_Braun51@example.net\",\n                \"phoneNumber\": \"555-900-1599\",\n                \"worksFor\": {\n                    \"type\": \"Organization\",\n                    \"name\": \"Koepp, Shanahan and Nienow\",\n                    \"description\": \"Networked multi-state functionalities\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"6384 Verlie Key\",\n                        \"addressLocality\": \"Coleshire\",\n                        \"addressRegion\": \"Colorado\",\n                        \"postalCode\": \"63968-4022\",\n                        \"addressCountry\": \"Sudan\"\n                    },\n                    \"email\": \"Israel61@example.net\",\n                    \"phoneNumber\": \"555-937-1345\",\n                    \"faxNumber\": \"555-327-9115\"\n                },\n                \"jobTitle\": \"District Quality Associate\"\n            },\n            \"name\": \"Avocados\",\n            \"description\": \"Avocados, 4 pack boxes\",\n            \"sizeOrAmount\": {\n                \"type\": \"QuantitativeValue\",\n                \"unitCode\": \"hg/ha\",\n                \"value\": \"389\"\n            },\n            \"weight\": {\n                \"type\": \"QuantitativeValue\",\n                \"unitCode\": \"hg/ha\",\n                \"value\": \"7465\"\n            },\n            \"sku\": \"71266019767\"\n        },\n        \"scientificName\": \"Persea americana\",\n        \"labelImageUrl\": \"https://img.example.org/033383401508/640/480/\",\n        \"labelImageHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n    },\n    \"proof\": {\n        \"type\": \"Ed25519Signature2018\",\n        \"created\": \"2021-03-11T17:40:41.662Z\",\n        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Almr3oe4usekwT9g35aYAUH_mW5wjga925PUfmOBMgUsx86FQF0LDOC2reoU-5LJkeFtD5IMmS3claMm9dHCAw\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n    }\n}"
						}
					]
				},
				{
					"name": "Verify Credential against Secondary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(",
									"    \"workflow\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"secondaryName\"), ",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verifiableCredential\": {{responseIssueCred}},\n    \"options\": {\n        \"checks\": [\n            \"proof\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{secondaryServer}}{{secondaryPrefix}}/credentials/verify",
							"host": [
								"{{secondaryServer}}{{secondaryPrefix}}"
							],
							"path": [
								"credentials",
								"verify"
							]
						}
					},
					"response": [
						{
							"name": "Verify credential",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://dlt.mobi/mobility-schema\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"AgProduct\"\n        ],\n        \"issuer\": {\n            \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n        },\n        \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n        \"credentialSubject\": {\n            \"type\": \"AgProduct\",\n            \"upc\": \"033383401508\",\n            \"plu\": \"94225\",\n            \"gtin\": \"033383401508\",\n            \"product\": {\n                \"type\": \"Product\",\n                \"manufacturer\": {\n                    \"type\": \"Person\",\n                    \"firstName\": \"Itzel\",\n                    \"lastName\": \"Leannon\",\n                    \"email\": \"Camila_Braun51@example.net\",\n                    \"phoneNumber\": \"555-900-1599\",\n                    \"worksFor\": {\n                        \"type\": \"Organization\",\n                        \"name\": \"Koepp, Shanahan and Nienow\",\n                        \"description\": \"Networked multi-state functionalities\",\n                        \"address\": {\n                            \"type\": \"PostalAddress\",\n                            \"streetAddress\": \"6384 Verlie Key\",\n                            \"addressLocality\": \"Coleshire\",\n                            \"addressRegion\": \"Colorado\",\n                            \"postalCode\": \"63968-4022\",\n                            \"addressCountry\": \"Sudan\"\n                        },\n                        \"email\": \"Israel61@example.net\",\n                        \"phoneNumber\": \"555-937-1345\",\n                        \"faxNumber\": \"555-327-9115\"\n                    },\n                    \"jobTitle\": \"District Quality Associate\"\n                },\n                \"name\": \"Avocados\",\n                \"description\": \"Avocados, 4 pack boxes\",\n                \"sizeOrAmount\": {\n                    \"type\": \"QuantitativeValue\",\n                    \"unitCode\": \"hg/ha\",\n                    \"value\": \"389\"\n                },\n                \"weight\": {\n                    \"type\": \"QuantitativeValue\",\n                    \"unitCode\": \"hg/ha\",\n                    \"value\": \"7465\"\n                },\n                \"sku\": \"71266019767\"\n            },\n            \"scientificName\": \"Persea americana\",\n            \"labelImageUrl\": \"https://img.example.org/033383401508/640/480/\",\n            \"labelImageHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n        },\n        \"proof\": {\n            \"type\": \"Ed25519Signature2018\",\n            \"created\": \"2021-03-11T17:40:41.662Z\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Almr3oe4usekwT9g35aYAUH_mW5wjga925PUfmOBMgUsx86FQF0LDOC2reoU-5LJkeFtD5IMmS3claMm9dHCAw\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n        }\n    },\n    \"options\": {\n        \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2021-03-11T17:40:41.662Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n        \"checks\": [\"credentialStatus\"]\n    }\n}"
								},
								"url": {
									"raw": "{{primaryServer}}/credentials/verify",
									"host": [
										"{{primaryServer}}"
									],
									"path": [
										"credentials",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "content-length",
									"value": "57"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Mar 2021 18:01:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"checks\": [\n        \"credentialStatus\"\n    ],\n    \"warnings\": [],\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Sign presentation on Tertiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(",
									"    \"workflow\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"sign\" + \"::\" + \"presentation\" + \"::\" + ",
									"    pm.collectionVariables.get(\"secondaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"tertiaryName\"), ",
									"    function () {",
									"    pm.response.to.have.status(201);",
									"    pm.collectionVariables.set(\"responseSignPres\", responseBody);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {{responseIssueCred}}\n        ]\n    },\n    \"options\": {\n        \"verificationMethod\": \"{{tertiaryAssertionMethod}}\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:28:08Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{tertiaryServer}}{{tertiaryPrefix}}/presentations/prove",
							"host": [
								"{{tertiaryServer}}{{tertiaryPrefix}}"
							],
							"path": [
								"presentations",
								"prove"
							]
						}
					},
					"response": [
						{
							"name": "Sign presentation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://dlt.mobi/mobility-schema\"\n        ],\n        \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {\n                \"@context\": [\n                    \"https://www.w3.org/2018/credentials/v1\",\n                    \"https://dlt.mobi/mobility-schema\"\n                ],\n                \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n                \"type\": [\n                    \"VerifiableCredential\",\n                    \"AgProduct\"\n                ],\n                \"issuer\": {\n                    \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n                },\n                \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n                \"credentialSubject\": {\n                    \"type\": \"AgProduct\",\n                    \"upc\": \"033383401508\",\n                    \"plu\": \"94225\",\n                    \"gtin\": \"033383401508\",\n                    \"product\": {\n                        \"type\": \"Product\",\n                        \"manufacturer\": {\n                            \"type\": \"Person\",\n                            \"firstName\": \"Itzel\",\n                            \"lastName\": \"Leannon\",\n                            \"email\": \"Camila_Braun51@example.net\",\n                            \"phoneNumber\": \"555-900-1599\",\n                            \"worksFor\": {\n                                \"type\": \"Organization\",\n                                \"name\": \"Koepp, Shanahan and Nienow\",\n                                \"description\": \"Networked multi-state functionalities\",\n                                \"address\": {\n                                    \"type\": \"PostalAddress\",\n                                    \"streetAddress\": \"6384 Verlie Key\",\n                                    \"addressLocality\": \"Coleshire\",\n                                    \"addressRegion\": \"Colorado\",\n                                    \"postalCode\": \"63968-4022\",\n                                    \"addressCountry\": \"Sudan\"\n                                },\n                                \"email\": \"Israel61@example.net\",\n                                \"phoneNumber\": \"555-937-1345\",\n                                \"faxNumber\": \"555-327-9115\"\n                            },\n                            \"jobTitle\": \"District Quality Associate\"\n                        },\n                        \"name\": \"Avocados\",\n                        \"description\": \"Avocados, 4 pack boxes\",\n                        \"sizeOrAmount\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"hg/ha\",\n                            \"value\": \"389\"\n                        },\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"hg/ha\",\n                            \"value\": \"7465\"\n                        },\n                        \"sku\": \"71266019767\"\n                    },\n                    \"scientificName\": \"Persea americana\",\n                    \"labelImageUrl\": \"https://img.example.org/033383401508/640/480/\",\n                    \"labelImageHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n                },\n                \"proof\": {\n                    \"type\": \"Ed25519Signature2018\",\n                    \"created\": \"2021-03-11T17:40:41.662Z\",\n                    \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Almr3oe4usekwT9g35aYAUH_mW5wjga925PUfmOBMgUsx86FQF0LDOC2reoU-5LJkeFtD5IMmS3claMm9dHCAw\",\n                    \"proofPurpose\": \"assertionMethod\",\n                    \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n                }\n            }\n        ]\n    },\n    \"options\": {\n        \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:28:08Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{primaryServer}}/presentations/prove",
									"host": [
										"{{primaryServer}}"
									],
									"path": [
										"presentations",
										"prove"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "content-length",
									"value": "2532"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Mar 2021 18:27:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://dlt.mobi/mobility-schema\"\n    ],\n    \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n    \"type\": \"VerifiablePresentation\",\n    \"verifiableCredential\": [\n        {\n            \"@context\": [\n                \"https://www.w3.org/2018/credentials/v1\",\n                \"https://dlt.mobi/mobility-schema\"\n            ],\n            \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n            \"type\": [\n                \"VerifiableCredential\",\n                \"AgProduct\"\n            ],\n            \"issuer\": {\n                \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n            },\n            \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n            \"credentialSubject\": {\n                \"type\": \"AgProduct\",\n                \"upc\": \"033383401508\",\n                \"plu\": \"94225\",\n                \"gtin\": \"033383401508\",\n                \"product\": {\n                    \"type\": \"Product\",\n                    \"manufacturer\": {\n                        \"type\": \"Person\",\n                        \"firstName\": \"Itzel\",\n                        \"lastName\": \"Leannon\",\n                        \"email\": \"Camila_Braun51@example.net\",\n                        \"phoneNumber\": \"555-900-1599\",\n                        \"worksFor\": {\n                            \"type\": \"Organization\",\n                            \"name\": \"Koepp, Shanahan and Nienow\",\n                            \"description\": \"Networked multi-state functionalities\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"streetAddress\": \"6384 Verlie Key\",\n                                \"addressLocality\": \"Coleshire\",\n                                \"addressRegion\": \"Colorado\",\n                                \"postalCode\": \"63968-4022\",\n                                \"addressCountry\": \"Sudan\"\n                            },\n                            \"email\": \"Israel61@example.net\",\n                            \"phoneNumber\": \"555-937-1345\",\n                            \"faxNumber\": \"555-327-9115\"\n                        },\n                        \"jobTitle\": \"District Quality Associate\"\n                    },\n                    \"name\": \"Avocados\",\n                    \"description\": \"Avocados, 4 pack boxes\",\n                    \"sizeOrAmount\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"hg/ha\",\n                        \"value\": \"389\"\n                    },\n                    \"weight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"hg/ha\",\n                        \"value\": \"7465\"\n                    },\n                    \"sku\": \"71266019767\"\n                },\n                \"scientificName\": \"Persea americana\",\n                \"labelImageUrl\": \"https://img.example.org/033383401508/640/480/\",\n                \"labelImageHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n            },\n            \"proof\": {\n                \"type\": \"Ed25519Signature2018\",\n                \"created\": \"2021-03-11T17:40:41.662Z\",\n                \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Almr3oe4usekwT9g35aYAUH_mW5wjga925PUfmOBMgUsx86FQF0LDOC2reoU-5LJkeFtD5IMmS3claMm9dHCAw\",\n                \"proofPurpose\": \"assertionMethod\",\n                \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n            }\n        }\n    ],\n    \"proof\": {\n        \"type\": \"Ed25519Signature2018\",\n        \"created\": \"2021-03-11T18:27:09.336Z\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n        \"domain\": \"vc.mesur.io\",\n        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jpHPVz5RkkWNP7_2Y9QljHvIm8-3U43lJ5pbNepDP7zHVVR3Mbn5U5ItGsYaNx1GjYSufjVZEkXWM9HO1lHhBQ\",\n        \"proofPurpose\": \"authentication\",\n        \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n    }\n}"
						}
					]
				},
				{
					"name": "Verify Presentation by Final",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(",
									"    \"workflow\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"verify\" + \"::\" + \"presentation\" + \"::\" + ",
									"    pm.collectionVariables.get(\"tertiaryName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"finalName\"), ",
									"    function () {",
									"        //pm.collectionVariables.set('credentialFromPres', JSON.stringify(JSON.parse(pm.requestBody).verifiablePresentation.verifiableCredential[0]));",
									"        pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verifiablePresentation\": {{responseSignPres}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:48:36Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}"
						},
						"url": {
							"raw": "{{finalServer}}{{finalPrefix}}/presentations/verify",
							"host": [
								"{{finalServer}}{{finalPrefix}}"
							],
							"path": [
								"presentations",
								"verify"
							]
						}
					},
					"response": [
						{
							"name": "Verify presentation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifiablePresentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://dlt.mobi/mobility-schema\"\n        ],\n        \"holder\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {\n                \"@context\": [\n                    \"https://www.w3.org/2018/credentials/v1\",\n                    \"https://dlt.mobi/mobility-schema\"\n                ],\n                \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n                \"type\": [\n                    \"VerifiableCredential\",\n                    \"AgProduct\"\n                ],\n                \"issuer\": {\n                    \"id\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n                },\n                \"issuanceDate\": \"2020-03-10T04:24:12.164Z\",\n                \"credentialSubject\": {\n                    \"type\": \"AgProduct\",\n                    \"upc\": \"033383401508\",\n                    \"plu\": \"94225\",\n                    \"gtin\": \"033383401508\",\n                    \"product\": {\n                        \"type\": \"Product\",\n                        \"manufacturer\": {\n                            \"type\": \"Person\",\n                            \"firstName\": \"Itzel\",\n                            \"lastName\": \"Leannon\",\n                            \"email\": \"Camila_Braun51@example.net\",\n                            \"phoneNumber\": \"555-900-1599\",\n                            \"worksFor\": {\n                                \"type\": \"Organization\",\n                                \"name\": \"Koepp, Shanahan and Nienow\",\n                                \"description\": \"Networked multi-state functionalities\",\n                                \"address\": {\n                                    \"type\": \"PostalAddress\",\n                                    \"streetAddress\": \"6384 Verlie Key\",\n                                    \"addressLocality\": \"Coleshire\",\n                                    \"addressRegion\": \"Colorado\",\n                                    \"postalCode\": \"63968-4022\",\n                                    \"addressCountry\": \"Sudan\"\n                                },\n                                \"email\": \"Israel61@example.net\",\n                                \"phoneNumber\": \"555-937-1345\",\n                                \"faxNumber\": \"555-327-9115\"\n                            },\n                            \"jobTitle\": \"District Quality Associate\"\n                        },\n                        \"name\": \"Avocados\",\n                        \"description\": \"Avocados, 4 pack boxes\",\n                        \"sizeOrAmount\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"hg/ha\",\n                            \"value\": \"389\"\n                        },\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"hg/ha\",\n                            \"value\": \"7465\"\n                        },\n                        \"sku\": \"71266019767\"\n                    },\n                    \"scientificName\": \"Persea americana\",\n                    \"labelImageUrl\": \"https://img.example.org/033383401508/640/480/\",\n                    \"labelImageHash\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n                },\n                \"proof\": {\n                    \"type\": \"Ed25519Signature2018\",\n                    \"created\": \"2021-03-11T17:40:41.662Z\",\n                    \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Almr3oe4usekwT9g35aYAUH_mW5wjga925PUfmOBMgUsx86FQF0LDOC2reoU-5LJkeFtD5IMmS3claMm9dHCAw\",\n                    \"proofPurpose\": \"assertionMethod\",\n                    \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n                }\n            }\n        ],\n        \"proof\": {\n            \"type\": \"Ed25519Signature2018\",\n            \"created\": \"2021-03-11T18:27:09.336Z\",\n            \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n            \"domain\": \"vc.mesur.io\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jpHPVz5RkkWNP7_2Y9QljHvIm8-3U43lJ5pbNepDP7zHVVR3Mbn5U5ItGsYaNx1GjYSufjVZEkXWM9HO1lHhBQ\",\n            \"proofPurpose\": \"authentication\",\n            \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"\n        }\n    },\n    \"options\": {\n        \"verificationMethod\": \"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:48:36Z\",\n        \"domain\": \"vc.mesur.io\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}"
								},
								"url": {
									"raw": "{{primaryServer}}/presentations/verify",
									"host": [
										"{{primaryServer}}"
									],
									"path": [
										"presentations",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "Date",
									"value": "Thu, 11 Mar 2021 18:29:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"checks\": [\n        \"proof\"\n    ],\n    \"warnings\": [],\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Verify Credential From Presentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(",
									"    \"workflow\" + \"::\" + ",
									"    pm.variables.get(\"credentialType\") + \"::\" + ",
									"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
									"    pm.collectionVariables.get(\"finalName\")+ \"::\" + ",
									"    pm.collectionVariables.get(\"primaryName\"), ",
									"    function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verifiableCredential\": {{responseIssueCred}},\n    \"options\": {\n        \"checks\": [\n            \"proof\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{primaryServer}}{{serverPrefix}}/credentials/verify",
							"host": [
								"{{primaryServer}}{{serverPrefix}}"
							],
							"path": [
								"credentials",
								"verify"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(",
							"    \"common\" + \"::\" + ",
							"    pm.variables.get(\"credentialType\") + \"::\" + ",
							"    \"response\" + \"::\" + \"timing\" + \"::\" + ",
							"    pm.request.url+ \"::\" + ",
							"    pm.response.responseTime,",
							"    function(){",
							"        pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});",
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(",
					"    \"all\" + \"::\" + ",
					"    pm.variables.get(\"credentialType\") + \"::\" + ",
					"    \"response\" + \"::\" + \"status\" + \"::\" + ",
					"    pm.request.url+ \"::\" + ",
					"    pm.response.status,",
					"    function(){",
					"        //allowign not founds for now, this will fail later",
					"        pm.expect(pm.response.code).to.be.oneOf([201,200,404]);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "primaryName",
			"value": "mesur.io"
		},
		{
			"key": "primaryServer",
			"value": "https://vc.mesur.io"
		},
		{
			"key": "serverPrefix",
			"value": "/next"
		},
		{
			"key": "primaryDid",
			"value": "did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX"
		},
		{
			"key": "secondaryName",
			"value": "Spherity"
		},
		{
			"key": "secondaryServer",
			"value": "https://cbp-pre-prod.api.wallet.eu.spherity.io"
		},
		{
			"key": "secondaryPrefix",
			"value": "/api/v1/vc-http-api"
		},
		{
			"key": "secondaryDid",
			"value": "did:key:z6MkemYya9bX1csgVvcjEaeLwSYufjnbe7746S4rsMfq3D2E"
		},
		{
			"key": "tertiaryName",
			"value": "Transmute"
		},
		{
			"key": "tertiaryServer",
			"value": "https://vc.transmute.world"
		},
		{
			"key": "tertiaryPrefix",
			"value": "/next"
		},
		{
			"key": "tertiaryDid",
			"value": "did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd"
		},
		{
			"key": "finalName",
			"value": "Mavennet"
		},
		{
			"key": "finalServer",
			"value": "https://producer-api.neoflow.ca"
		},
		{
			"key": "finalPrefix",
			"value": "/v1"
		},
		{
			"key": "finalDid",
			"value": "did:key:z6MkiTsvjrrPNDZ1rrg9QDEYCFWCmEswT6U2cEkScb7edQ9b"
		},
		{
			"key": "primaryAssertionMethod",
			"value": "did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX"
		},
		{
			"key": "secondaryAssertionMethod",
			"value": "did:key:z6MkkvPAU8JWm65ktjSBjtGkdhAb1q71C255Dyq1A53CSQUF#z6MkkvPAU8JWm65ktjSBjtGkdhAb1q71C255Dyq1A53CSQUF"
		},
		{
			"key": "tertiaryAssertionMethod",
			"value": "did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd#z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd"
		},
		{
			"key": "finalAssertionMethod",
			"value": "did:key:z6MkiTsvjrrPNDZ1rrg9QDEYCFWCmEswT6U2cEkScb7edQ9b#z6MkiTsvjrrPNDZ1rrg9QDEYCFWCmEswT6U2cEkScb7edQ9b"
		},
		{
			"key": "responseIssueCredPrimary",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-15T00:01:47.500Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mgMH5JTzbvMpfE5aPNDTL30LXAIOLAmd5V9K92yAbPQxOk_BykcXCmSmvPxaNK0WbEnw0KNq34IFrE70FaQjDQ\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"}}"
		},
		{
			"key": "responseIssueCredSecondary",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:web:cbp-qa.wallet.spherity.io\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-15T00:01:48Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..K7BSDg2lOnBdzh3t-RMi5qGwx_NktIL4qtPZW0yIAgC3CJL32nQwnqik3hE5oS4F5gIDD37WeejNRdH6e9sTAw\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:web:cbp-qa.wallet.spherity.io#_rVMJQv3r3HeqwcXMTmFyg2oD-J2IxHloO2P5tLpF6k\"}}"
		},
		{
			"key": "responseIssueCredTertiary",
			"value": "{\"error\":true}"
		},
		{
			"key": "responseIssueCredFinal",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:v1:test:nym:z6MkfG5HTrBXzsAP8AbayNpG3ZaoyM4PCqNPrdWQRSpHDV6J\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-15T00:01:50Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5zKQqQ2irG3cnYxiro4UO_js0G0RZq9gxSyWEXH9yopMHMb_OoGBaHhFXVEgTJGEoRPQMiqINdplb4tgh_f3Ag\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:v1:test:nym:z6MkfG5HTrBXzsAP8AbayNpG3ZaoyM4PCqNPrdWQRSpHDV6J#z6MkqfvdBsFw4QdGrZrnx7L1EKfY5zh9tT4gumUGsMMEZHY3\"}}"
		},
		{
			"key": "responseSignPresPrimary",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"holder\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"type\":\"VerifiablePresentation\",\"verifiableCredential\":[{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-15T00:01:47.500Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mgMH5JTzbvMpfE5aPNDTL30LXAIOLAmd5V9K92yAbPQxOk_BykcXCmSmvPxaNK0WbEnw0KNq34IFrE70FaQjDQ\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"}}],\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-15T00:01:51.231Z\",\"challenge\":\"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\"domain\":\"vc.mesur.io\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..DYf8a_aZa7La_aCayLZYfpR9-yEav37_BAP-diGnKGo0-iu4IhNW3q-dqvbupPNh6GSg03-oeLUl3p1iW8s6DA\",\"proofPurpose\":\"authentication\",\"verificationMethod\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"}}"
		},
		{
			"key": "responseSignPresSecondary",
			"value": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /api/v1/presentation/prove</pre>\n</body>\n</html>\n"
		},
		{
			"key": "responseSignPresTertiary",
			"value": "{\"statusCode\":500,\"error\":\"Internal Server Error\",\"message\":\"The property \\\"error\\\" in the input was not defined in the context.\"}"
		},
		{
			"key": "responseSignPresFinal",
			"value": "{\"statusCode\":404,\"message\":\"Cannot POST /v1/presentations/prove\",\"error\":\"Not Found\"}"
		},
		{
			"key": "responseIssueCred",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-14T21:16:45.751Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..fWYJS-0SfQGlHwYw5UAk8HWgVYWfurl220F3u5pNnC44RMUvVUS3V5tiDr4m1ly3zpjd_Rw3UjGua53hR--eBw\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"}}"
		},
		{
			"key": "responseSignPres",
			"value": "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\"],\"holder\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"type\":\"VerifiablePresentation\",\"verifiableCredential\":[{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://dlt.mobi/mobility-schema\"],\"id\":\"http://example.org/credentials/\",\"type\":[\"VerifiableCredential\"],\"issuanceDate\":\"2021-02-04T20:29:37+00:00\",\"issuer\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\",\"credentialSubject\":{\"@context\":[\"https://dlt.mobi/mobility-schema\"],\"type\":\"EcommercePackageItem\",\"productReceiptID\":\"https://vc.example.com/?queryID=0x450a1eDAeA6c3D6B2AE1B0a4De59f8CD7DAE666f2594A4E7d9CCC23Aab26faE6\",\"packingListID\":\"https://vc.example.com/?queryID=0x3dA9d3c28c7D074A0ecE2CDcbefD98c7E01C5BB22c1a722Fc441DdBAf0deCb42\",\"orderID\":\"https://vc.example.com/?queryID=AB06f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58597a\",\"productInOrder\":[\"https://vc.example.com/?queryID=6206f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\",\"https://vc.example.com/?queryID=7306f1f744a781480c521902a1a1dbf5f1d01e7ea21daf483e7668817e58598a\"]},\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-14T21:16:45.751Z\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..fWYJS-0SfQGlHwYw5UAk8HWgVYWfurl220F3u5pNnC44RMUvVUS3V5tiDr4m1ly3zpjd_Rw3UjGua53hR--eBw\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX#z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX\"}}],\"proof\":{\"type\":\"Ed25519Signature2018\",\"created\":\"2021-03-14T21:16:47.582Z\",\"challenge\":\"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\"domain\":\"vc.mesur.io\",\"jws\":\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..u97VgEhJ19NgmIEzcEX5CTplLuoanYftOMB9ZqQj35nBAo2eKZIss0RyS3IlIAZ3TqgxNyyh6MI1u_PuDXejBQ\",\"proofPurpose\":\"authentication\",\"verificationMethod\":\"did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd#z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd\"}}"
		}
	]
}
